1. Seleziona tutti gli utenti e calcolane l'et√† (25)
    {
        SELECT `users`.`username`,
        YEAR(CURRENT_TIMESTAMP) - YEAR(`users`.`birthdate`) - (RIGHT(CURRENT_TIMESTAMP, 5) < RIGHT(`users`.`birthdate`, 5)) as age  
        FROM `users`;
    }

2. Seleziona tutti i post senza Like (13)
    {
        SELECT * FROM `posts` 
        WHERE `posts`.`id` NOT IN (SELECT `likes`.`post_id` FROM `likes`)
    }

3. Conta il numero di like per ogni post (165)
    {
        SELECT `posts`.`id` AS `post_id`, COUNT(*) AS `likes`
        FROM `posts`
        JOIN `likes` ON `likes`.`post_id` = `posts`.`id`
        GROUP BY `posts`.`id`
    }

4. Ordina gli utenti per il numero di media caricati (25)
    {
        SELECT `users`.`username` AS `users_username`, COUNT(*) AS `uploaded_media`
        FROM `users`
        JOIN `medias` ON `medias`.`user_id` = `users`.`id`
        GROUP BY `users`.`id`
        ORDER BY `uploaded_media`
    }

5. Ordina gli utenti per totale di likes ricevuti nei loro posts (25)
    {
        SELECT `users`.`username` AS `users_username`, COUNT(`likes`.`post_id`) AS `likes`
        FROM `likes` 
        JOIN `posts` ON `posts`.`id` = `likes`.`post_id`
        JOIN `users` ON `users`.`id`= `posts`.`user_id`
        GROUP BY `users`.`id`
        ORDER BY `likes` DESC;
    }

6. Seleziona tutti i post degli utenti tra i 20 e i 30 anni (49)
    {
        SELECT `users`.`username`, `posts`.`id` AS `post_id`,
        YEAR(CURRENT_DATE()) - YEAR(`users`.`birthdate`) - (RIGHT(CURRENT_DATE(), 5) < RIGHT(`users`.`birthdate`, 5)) AS `age`
        FROM `users`
        JOIN `posts` ON `posts`.`user_id` = `users`.`id`
        WHERE YEAR(CURRENT_DATE()) - YEAR(`users`.`birthdate`) - (RIGHT(CURRENT_DATE(), 5) < RIGHT(`users`.`birthdate`, 5)) BETWEEN 20 AND 30;
    }

7. Seleziona il numero di post e di media per ogni utente (25)
    {
        SELECT `users`.`id`, `users`.`username`, COUNT(DISTINCT `posts`.`id`) AS `tot_posts`, COUNT(DISTINCT `medias`.`id`) AS `tot_media` 
        FROM `users` 
        JOIN `posts` ON `posts`.`user_id` = `users`.`id`
        JOIN `medias` ON `medias`.`user_id` = `users`.`id` 
        GROUP BY `users`.`id`;
    }

BONUS
8. Seleziona tutti i post che contengono il tag 'serata' (8)
    {
        SELECT * 
        FROM `posts` 
        WHERE JSON_SEARCH(`tags`, 'all', '%serata%')
    }

9. Ordina i post in base al numero di tag (165)
    {
        SELECT *, JSON_LENGTH(`tags`) AS `tags_num` 
        FROM `posts`
        ORDER BY `tags_num` DESC
    }
    
10. Ordina gli utenti in base al numero di tag usati nei loro post (25)
    {
        SELECT `users`.`username`, COUNT(JSON_LENGTH(`posts`.`tags`)) AS `tot_tags_used` 
        FROM `users`
        JOIN `posts` ON `users`.`id` = `posts`.`user_id`
        GROUP BY `users`.`id`
        ORDER BY `tot_tags_used` DESC   
    }